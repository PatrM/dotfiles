set relativenumber
set number
set ignorecase
set smartcase
let mapleader = " "

if has('ide')

nnoremap <A-j> :m .+1<CR>==
nnoremap <A-k> :m .-2<CR>==
inoremap <A-j> <Esc>:m .+1<CR>==gi
inoremap <A-k> <Esc>:m .-2<CR>==gi
vnoremap <A-j> :m '>+1<CR>gv=gv
vnoremap <A-k> :m '<-2<CR>gv=gv

  nnoremap <leader>ff :action GotoFile<cr>
  nnoremap <leader>fc :action GotoClass<cr>
  nnoremap <leader>ar :action Run<cr>
  nnoremap <leader>ad :action Debug<cr>
  nnoremap <leader>fw :action SelectInProjectView<cr>
  nnoremap <leader>rr :action RenameElement<cr>
  nnoremap <leader>fa :action FindInPath<cr>
  nnoremap <leader>bb :action RecentFiles<cr>
  nnoremap <leader>ca :action ShowIntentionActions<cr>

  nnoremap ]d :action GotoNextError<cr>
  nnoremap [d :action GotoPreviousError<cr>

  nnoremap gr :action ShowUsages<cr>

  nnoremap <leader>db :action ToggleLineBreakpoint<cr>
  nnoremap <leader>dc :action Resume<cr>

  nnoremap <leader>vv :action ToggleDistractionFreeMode<cr>

  nnoremap <C-v> :action SplitVertically<cr>
  nnoremap <C-h> :action SplitHorizontally<cr>

endif
